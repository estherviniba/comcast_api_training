{
	"info": {
		"_postman_id": "ff94f625-f9b6-4ac9-b6d8-7113aff23b61",
		"name": "Performance monitering",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35070795"
	},
	"item": [
		{
			"name": "https://gorest.co.in/public",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://gorest.co.in/public",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://gorest.co.in/public/v2/users/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 created\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than < 5s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is received from server\", function () {\r",
							"    pm.response.to.have.body();\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify if response body is received in JSON format\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify if response body contains fields such as id, name, email, gender, status\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"    pm.expect(pm.response.text()).to.include(\"email\")\r",
							"    pm.expect(pm.response.text()).to.include(\"gender\")\r",
							"    pm.expect(pm.response.text()).to.include(\"status\")\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if gender is either male or female\", function () {\r",
							"    pm.expect(pm.response.json().gender).to.be.oneOf([\"male\", \"female\"]);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify if status is active or inactive\", function () {\r",
							"    pm.expect(pm.response.json().status).to.be.oneOf([\"active\", \"inactive\"]);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify if the name field is \"+pm.iterationData.get(\"name\"), function () {\r",
							"    pm.expect(pm.response.json().name).to.equal(pm.iterationData.get(\"name\"));\r",
							"    console.log(\"The name found in the csv file is \"+pm.iterationData.get(\"name\"));\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify if the status field is \"+pm.iterationData.get(\"status\"), function () {\r",
							"    pm.expect(pm.response.json().status).to.equal(pm.iterationData.get(\"status\"));\r",
							"    console.log(\"The status found in the csv file is \"+pm.iterationData.get(\"status\"));\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer d67ab3bd7c88059cf5fec42d724551d61e6c3c8f0fa1150d7e48935e964b010a"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\": \"{{name}}\",\r\n\"email\": \"{{email}}\",\r\n\"gender\": \"{{gender}}\",\r\n\"status\": \"{{status}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users/",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "https://gorest.co.in/public/v2/users/{{useridtodelete}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if response code is 204 No Content\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"    pm.response.to.have.status(\"No Content\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify if response time < 2 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify if response body is not received from server\", function () {\r",
							"    pm.response.to.not.have.body();\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer d67ab3bd7c88059cf5fec42d724551d61e6c3c8f0fa1150d7e48935e964b010a"
					}
				],
				"url": {
					"raw": "https://gorest.co.in/public/v2/users/6920249",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users",
						"6920249"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://gorest.co.in/public/v2/users/{{useridtoupdate}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if response code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify if response time < 5 seconds\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify if response body is received from server\", function () {\r",
							"    pm.response.to.have.body();\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify if response body is received in JSON format\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify if response body contains fields such as id, name, email, gender, status\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"    pm.expect(pm.response.text()).to.include(\"email\")\r",
							"    pm.expect(pm.response.text()).to.include(\"gender\")\r",
							"    pm.expect(pm.response.text()).to.include(\"status\")\r",
							"});\r",
							"pm.test(\"Verify if gender is either male or female\", function () {\r",
							"    pm.expect(pm.response.json().gender).to.be.oneOf([\"male\", \"female\"]);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify if status is active or inactive\", function () {\r",
							"    pm.expect(pm.response.json().status).to.be.oneOf([\"active\", \"inactive\"]);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if name=Comcast-IT Company\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Tanirika Kaul\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify if email=info3@comcast.com\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.email).to.eql(\"tanirika_kaul@gleason.example\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify if id=6921366\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(6920247);\r",
							"});\r",
							"\r",
							"console.log(\"The data type for id field is \"+typeof(pm.response.json().id));\r",
							"console.log(\"The data type for name field is \"+typeof(pm.response.json().name));\r",
							"console.log(\"The data type for status field is \"+typeof(pm.response.json().status));\r",
							"console.log(\"The data type for gender field is \"+typeof(pm.response.json().gender));\r",
							"console.log(\"The data type for email field is \"+typeof(pm.response.json().email));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer d67ab3bd7c88059cf5fec42d724551d61e6c3c8f0fa1150d7e48935e964b010a"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"email\":\"{{updatedemail}}\",\r\n\"status\":\"{{updatedstatus}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users/{{useridtoupdate}}",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{useridtoupdate}}"
					]
				}
			},
			"response": []
		}
	]
}